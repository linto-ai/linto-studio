{
  "/api/conversations/create/": {
    "post": {
      "tags": [
        "conversations"
      ],
      "summary": "Create a new conversation",
      "requestBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "file": {
                  "type": "file",
                  "format": "binary",
                  "description": "Audio file to convert into a conversation"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the conversation"
                },
                "endpoint": {
                  "type": "string",
                  "description": "Endpoint of the conversation (can get information from service api)"
                },
                "lang": {
                  "type": "string",
                  "description": "Language of the conversation"
                },
                "transcriptionConfig": {
                  "$ref": "#/components/schemas/TranscriptionConfig"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the conversation"
                },
                "organizationId": {
                  "type": "uiid",
                  "description": "Organization id to add the conversation (default to personal organization)"
                },
                "membersRight": {
                  "type": "integer",
                  "description": "Right of the members from the organization"
                },
                "segmentCharSize": {
                  "type": "integer",
                  "description": "Size of the segment in char"
                }

              }

            },
            "required": [
              "file",
              "name",
              "endpoint",
              "lang"
            ]
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Information about the conversation processus"
                }
              },
              "example": {
                "message": "A conversation is currently being processed"
              }
            }
          }
        },
        "400": {
          "$ref": "#/components/responses/BadRequest"
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        },
        "404": {
          "$ref": "#/components/responses/NotFound"
        },
        "415": {
          "$ref": "#/components/responses/UnsupportedMediaType"
        }
      }
    }
  },
  "/api/conversations/import?type=transcription": {
    "post": {
      "tags": [
        "conversations"
      ],
      "summary": "Import a new conversation",
      "requestBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the conversation"
                },
                "lang": {
                  "type": "string",
                  "description": "Language of the conversation"
                },
                "transcription" :{
                  "$ref":"#/components/schemas/TranscriptionModel"
                },
                "file": {
                  "type": "file",
                  "format": "binary",
                  "description": "Audio file to convert into a conversation"
                },
                "transcriptionConfig": {
                  "$ref": "#/components/schemas/TranscriptionConfig"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the conversation"
                },
                "organizationId": {
                  "type": "uiid",
                  "description": "Organization id to add the conversation (default to personal organization)"
                },
                "membersRight": {
                  "type": "integer",
                  "description": "Right of the members from the organization"
                },
                "segmentCharSize": {
                  "type": "integer",
                  "description": "Size of the segment in char"
                }
              }
            },
            "required": [
              "name",
              "lang",
              "transcription"
            ]
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Information about the conversation processus"
                }
              },
              "example": {
                "message": "Conversation imported"
              }
            }
          }
        },
        "400": {
          "$ref": "#/components/responses/BadRequest"
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        },
        "415": {
          "$ref": "#/components/responses/UnsupportedMediaType"
        }
      }
    }
  },

  "/api/conversations/import?type=conversation": {
    "post": {
      "tags": [
        "conversations"
      ],
      "summary": "Import a new conversation",
      "requestBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "file": {
                  "type": "file",
                  "format": "binary",
                  "description": "Audio file to convert into a conversation"
                },
                "conversation" :{
                  "$ref":"#/components/schemas/Conversation"
                }
              }
            },
            "required": [
              "file",
              "name",
              "endpoint",
              "lang"
            ]
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Information about the conversation processus"
                }
              },
              "example": {
                "message": "Conversation imported"
              }
            }
          }
        },
        "400": {
          "$ref": "#/components/responses/BadRequest"
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        },
        "415": {
          "$ref": "#/components/responses/UnsupportedMediaType"
        }
      }
    }
  },
  "/api/conversations/search": {
    "post": {
      "tags": [
        "conversations"
      ],
      "summary": "Search conversations",
      "requestBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "searchType": {
                  "type": "string",
                  "enum": [
                    "title",
                    "description",
                    "text"
                  ],
                  "description": "Type of search to do in conversation"
                },
                "text": {
                  "type": "string",
                  "description": "Text to search"
                },
                "organizationId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Organization id to search in (can be empty)"
                }
              }
            },
            "required": [
              "searchType",
              "text"
            ]
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "searchType": {
                    "type": "string",
                    "enum": [
                      "title",
                      "description",
                      "text"
                    ],
                    "description": "Type of search to do in conversation"
                  },
                  "conversations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "$ref": "#/components/schemas/ConversationList"
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        }
      }
    }
  },
  "/api/conversations/list/share": {
    "get": {
      "tags": [
        "conversations"
      ],
      "summary": "Get all conversations shared with the user",
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "$ref": "#/components/schemas/ConversationList"
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        }
      }
    }
  },
  "/api/conversations/{conversationId}/invite": {
    "post": {
      "tags": [
        "conversations"
      ],
      "summary": "Invite an external or private user to a conversation",
      "parameters": [{
        "in": "path",
        "name": "conversationId",
        "type": "string",
        "format": "uuid",
        "required": true,
        "description": "uuid string identifier for an conversation"
      }],
      "requestBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email"
                }
              },
              "required": [
                "email"
              ]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Information about the conversation processus"
                }
              },
              "example": {
                "message": "Conversation updated"
              }
            }
          }
        }
      },
      "401": {
        "$ref": "#/components/responses/Unauthorized"
      }
    }
  },
  "/api/conversations/{conversationId}/media": {
    "get": {
      "tags": [
        "conversations"
      ],
      "summary": "Get media from a conversation",
      "description":"Set response type to \"audio/mpeg\" to get the mp3 file, or to \"application/json\" to get audiowavesurfer json file.",
      "parameters": [{
        "in": "path",
        "name": "conversationId",
        "type": "string",
        "format": "uuid",
        "required": true,
        "description": "uuid string identifier for an conversation "
      },
      {
        "in": "query",
        "name": "mediatype",
        "type": "string",
        "required": false,
        "description": "If the mediatype 'json' is passed as query, return audiowaveform json"
      }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "audio/mpeg": {
              "type": "file"
            },
            "application/json": {
              "$ref": "#/components/schemas/Audiowaveform"
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        },
        "404": {
          "$ref": "#/components/responses/NotFound"
        }
      }
    }
  }
}