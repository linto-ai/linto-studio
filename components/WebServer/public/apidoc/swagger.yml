openapi: '3.0.0'
info:
  version: '1.0.0'
  title: 'Conversation manager API client'
  description: 'a tool for listening to, reading, editing and annotating a conversation transcript'
  termsOfService: https://doc.linto.ai/#/?id=gnu-affero-general-public-licence-v3
  contact:
    name: LINAGORA
    url: http://linto.ai
    email: contact@linto.ai
#servers:
host: localhost:8000
basePath: /
schemes:
 - https
paths:
## CONVERSATIONS
  /api/conversations:
    get:
      tags: 
        - "conversations"
      summary: Get all conversations
      operationId: GetAllConversations,
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/conversations'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'
## CONVERSATION / SPEAKER
  /api/conversation/:conversationid/speakers:
    get:
      tags:
        - "speakers"
      summary: get speakers for a conversation
      operationId: "GetConversationSpeakers"
      parameters: 
        - in: path
          name: conversationid
          type: string
          format: uuid
          required: true
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/speakers'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'
    post:
      tags:
        - "speakers"
      summary: create a speaker for a conversation
      operationId: "AddConversationSpeakers"
      parameters: 
        - in: path
          name: conversationid
          type: string
          format: uuid
          required: true
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customSuccess'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'

  /api/conversation/:conversationid/speakers/:speakerid:
    patch: 
      tags:
        - "speakers"
      summary: Update a speaker name in a conversation
      operationId: "identifySpeaker"
      parameters: 
        - in: path
          name: conversationid
          type: string
          format: uuid
          required: true
        - in: path
          name: speakerid
          type: string
          format: uuid
          required: true
        - in: requestBody
          name: newname
          type: string
          required: true
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customSuccess'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'
    delete: 
      tags:
        - "speakers"
      summary: Delete a speaker from a conversation
      operationId: "deleteSpeaker"
      parameters: 
        - in: path
          name: conversationid
          type: string
          format: uuid
          required: true
        - in: path
          name: speakerid
          type: string
          format: uuid
          required: true
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customSuccess'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'
        '428':
          description: speaker can't be deleted 
          content:
            application/json:
              schema:
                type: object
                properties:
                  turn_number:
                    type: string
                  msg:
                    type: string
  
## CONVERSATION / TURNS
  /api/conversation/{conversationid}/turn:
    delete:
      tags:
        - "turns"
      summary: Delete a set of turns in a conversation
      operationId: "DeleteTurns"
      parameters: 
        - in: path
          name: conversationid
          type: string 
          format: uuid 
          required: true 
          description: id of conversation object
      requestBody:
        required: true
        description: An array of one or more turnids 
        content:
          application/json:
            schema:
              type: array 
              items:
                type: string
                format: uuid 
            example:
              ['3fa85f645717456443fc2c963f66afa6', '3fa66f645717456443fc2c963f66ay9d']
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customSuccess'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'
  /api/conversation/:conversationid/turn/merge:
    patch: 
      tags:
        - "turns"
      summary: Merge a set of turns
      operationId: "MergeTurns"
      parameters: 
        - in: path
          name: conversationid
          type: string
          format: uuid
          required: true
        - in: requestBody
          name: turnids
          type: array
          items:
            type: string
            format: uuid
          required: true
          description: array of turn_id(s)
        - in: requestBody
          name: speakerid
          type: string
          format: uuid
          required: true
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customSuccess'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'
  /api/conversation/{conversationid}/turn/{turnid}:
    put:
      tags:
        - "turns"
      summary: Identify a speaker for a turn in a conversation
      operationId: "UpdateTurnSpeaker"
      parameters: 
        - in: path
          name: conversationid
          type: string
          format: uuid
          required: true
        - in: path
          name: turnid
          type: string
          format: uuid
          required: true
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customSuccess'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'
  /api/conversation/:conversationid/turn/split:
    put: 
      tags:
        - "turns"
      summary: Split a set of turns and associate speakerid to new turn 
      operationId: "SplitTurns"
      parameters: 
        - in: path
          name: conversationid
          type: string
          format: uuid
          required: true
      requestBody:
        required: true
        description: An object containing a turnid, wordid, positions arrays plus a speaker id  
        content:
          application/json:
            schema:
              type: object 
              properties:
                turnids: 
                  type: array
                  items:
                    type: string
                    format: uuid
                wordids:
                  type: array
                  items:
                    type: string
                    format: uuid
                positions:
                  type: array
                  items:
                    type: string
                    format: uuid
                speakerid:
                  type: string
                  format: uuid 
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customSuccess'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'
  /api/conversation/{conversationid}/turn/{speakerid}:
    post:
      tags:
        - "turns"
      summary: Create a turn in a conversation
      operationId: "CreateTurn"
      parameters: 
        - in: path
          name: conversationid
          type: string
          format: uuid
          required: true
        - in: path
          name: speakerid
          type: string
          format: uuid
          required: true 
      # requestBody:
      #   required: true
      #   description: a uuid string speaker id 
      #   content:
      #     application/json:
      #       schema:
      #         type: string
      #         format: uuid 
      #         example:
      #           '3fa85f6457174562b3fc2c963f66afa6'
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customSuccess'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'
    put:
      tags:
        - "turns"
      summary: Replace a speaker by an existing speaker (associate turns)
      operationId: "CombineSpeakerIds"
      parameters: 
        - in: path
          name: conversationid
          type: string
          format: uuid
          required: true
        - in: path
          name: speakerid
          type: string
          format: uuid
          required: true
        - in: requestBody
          name: newspeakerid
          type: string
          format: uuid
          required: true
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customSuccess'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'
  /api/conversation/:conversationid/text:
    put: 
      tags:
        - "textedit"
      summary: Replace all the text object in a conversation
      operationId: "replaceAllText"
      parameters: 
        - in: path
          name: conversationid
          type: string
          format: uuid
          required: true
        - in: requestBody
          name: text
          description: array of "words"
          type: array
          items:
            type: object
            properties:
              speaker_id:
                type: string
                format: uuid
              turn_id:
                type: string
                format: uuid
              pos: 
                type: integer
              words:
                type: array
                items:
                  type: object
                  properties:
                    wid:
                      type: string
                      format: uuid
                    etime:
                      type: number
                    stime:
                      type: number
                    word:
                      type: string
                    pos:
                      type: integer
                    highlights:
                      type: array
                      items:
                        type: string
                        format: uuid
                    keywords:
                      type: array
                      items:
                        type: string
                        format: uuid
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customSuccess'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'
components: 
  schemas:
    customError:
      type: object
      properties:
        txtStatus: 
          type: string
        msg:
          type: string
    customSuccess:
      type: object
      properties:
        txtStatus: 
          type: string
        msg:
          type: string
    conversation:
      type: object 
      properties: 
        _id: 
          type: string
          format: uuid
        created:
          type: string
          format: date-time
        owner:
          type: array
          items:
            type: object
            properties:
              user_id:
                type: string
                format: uuid
              name:
                type: string
              img:
                type: string
                format: uri
        description:
          type: string
        audio:
          type: string
          format: uri
        name: 
          type: string
        mtype:
          type: string
        locked:
          type: integer
        mdate:
          type: string
          format: date-time
        mtime:
          format: string
        duration:
          format: string
        agenda:
          type: string
        abstract:
          type: string
        sharedWith:
          type: array
          items:
            type: object 
            properties:
              user_id:
                type: string
                format: uuid
              name:
                type: string
              img:
                type: string
                format: uri
        highlights:
          type: array
          items:
            type: object 
            properties:
              _id:
                type: string
                format: uuid
              label: 
                type: string
              color:
                type: string
                format: uri
        keywords:
          type: array
          items:
            type: object 
            properties:
              _id:
                type: string
                format: uuid
              label: 
                type: string
        speakers:
          type: array
          items:
            type: object 
            properties:
              speaker_id:
                type: string
                format: uuid
              speaker_name:
                type: string
              stime:
                type: number
              etime:
                type: number
        text:
          type: array
          items:
            type: object 
            properties:
              speaker_id:
                type: string
                format: uuid
              turn_id:
                type: string
                format: uuid
              pos: 
                type: integer
              words:
                type: array
                items:
                  type: object
                  properties:
                    wid:
                      type: string
                      format: uuid
                    etime:
                      type: number
                    stime:
                      type: number
                    word:
                      type: string
                    pos:
                      type: integer
                    highlights:
                      type: array
                      items:
                        type: string
                        format: uuid
                    keywords:
                      type: array
                      items:
                        type: string
                        format: uuid
    conversations:
      type: array
      items:
        $ref: '#/components/schemas/conversation'
    speakers:
      type: array
      items:
        type: object 
        properties:
          speaker_id:
            type: string
            format: uuid
          speaker_name:
            type: string
          stime:
            type: number
          etime:
            type: number
