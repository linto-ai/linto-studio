openapi: '3.0.0'
info:
  version: '1.0.0'
  title: 'Conversation manager API client'
  description: 'a tool for listening to, reading, editing and annotating a conversation transcript'
  termsOfService: https://doc.linto.ai/#/?id=gnu-affero-general-public-licence-v3
  contact:
    name: LINAGORA
    url: http://linto.ai
    email: contact@linto.ai
#servers:
host: localhost:8000
basePath: /
schemes:
 - https
paths:
## CONVERSATIONS
  /api/conversations:
    get:
      tags: 
        - "conversations"
      summary: Get all conversations
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/conversations'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'
## CONVERSATION / SPEAKER
  /api/conversation/{conversationid}/speakers:
    get:
      tags:
        - "speakers"
      summary: Returns all speaker objects for a conversation
      parameters: 
        - in: path
          name: conversationid
          type: string
          format: uuid
          required: true
          description: uuid string identifier for a conversation
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/speakers'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'
    post:
      tags:
        - "speakers"
      summary: Creates a new speaker object for a conversation
      parameters: 
        - in: path
          name: conversationid
          type: string
          format: uuid
          required: true
          description: uuid string identifier for a conversation
      requestBody:
        required: true
        description: An object containing a speaker name and turnid if speaker is created wrt a specific turn
        content:
          application/json:
            schema:
              type: object 
              properties:
                speakername: 
                  type: string
                turnid:
                  type: string
                  format: uuid
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customSuccess'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'
  /api/conversation/{conversationid}/mergespeakers/{speakerid}:
    patch: 
      tags:
        - "speakers"
      summary: Merges two speaker ids and deletes the id that is replaced
      parameters: 
        - in: path
          name: conversationid
          type: string
          format: uuid
          required: true
          description: uuid string identifier for a conversation
        - in: path
          name: speakerid
          type: string
          format: uuid
          required: true
          description: uuid string identifier for a speaker
      requestBody:
        required: true
        description: An object containing speaker id to replace id in params
        content:
          application/json:
            schema:
              type: object 
              properties:
                newspeakerid:
                  type: string
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customSuccess'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'              
  /api/conversation/{conversationid}/speakers/{speakerid}:
    patch: 
      tags:
        - "speakers"
      summary: Update the name (string) associated with a speaker id 
      parameters: 
        - in: path
          name: conversationid
          type: string
          format: uuid
          required: true
          description: uuid string identifier for a conversation
        - in: path
          name: speakerid
          type: string
          format: uuid
          required: true
          description: uuid string identifier for a speaker
      requestBody:
        required: true
        description: An object containing a new speakername
        content:
          application/json:
            schema:
              type: object 
              properties:
                newspeakername: 
                  type: string
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customSuccess'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'
    delete: 
      tags:
        - "speakers"
      summary: Deletes a speaker from a conversation
      parameters: 
        - in: path
          name: conversationid
          type: string
          format: uuid
          required: true
          description: uuid string identifier for a conversation
        - in: path
          name: speakerid
          type: string
          format: uuid
          required: true
          description: uuid string identifier for a speaker
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customSuccess'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'
        '428':
          description: speaker can't be deleted 
          content:
            application/json:
              schema:
                type: object
                properties:
                  turn_number:
                    type: string
                  msg:
                    type: string
  
## CONVERSATION / TURNS
  /api/conversation/{conversationid}/turn:
    delete:
      tags:
        - "turns"
      summary: Deletes a set of turns in a conversation
      parameters: 
        - in: path
          name: conversationid
          type: string 
          format: uuid 
          required: true 
          description: uuid string identifier for a conversation
      requestBody:
        required: true
        description: An array of one or more turnids 
        content:
          application/json:
            schema:
              type: array 
              items:
                type: string
                format: uuid 
            example:
              ['3fa85f645717456443fc2c963f66afa6', '3fa66f645717456443fc2c963f66ay9d']
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customSuccess'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'
  /api/conversation/{conversationid}/turn/merge:
    patch: 
      tags:
        - "turns"
      summary: Merges a set of turns
      parameters: 
        - in: path
          name: conversationid
          type: string
          format: uuid
          required: true
          description: uuid string identifier for a conversation
      requestBody:
        required: true
        description: An object containing an array of turn ids and a speaker name 
        content:
          application/json:
            schema:
              type: object 
              properties:
                turnids: 
                  type: array
                  items:
                    type: string
                    format: uuid
                speakerid:
                  type: string
                  format: uuid 
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customSuccess'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'
  /api/conversation/{conversationid}/turnspeaker/{turnid}:
    put:
      tags:
        - "turns"
      summary: Replaces a speaker by an existing speaker in a single turn
      parameters: 
        - in: path
          name: conversationid
          type: string
          format: uuid
          required: true
          description: uuid string identifier for a conversation
        - in: path
          name: turnid
          type: string
          format: uuid
          required: true
          description: uuid string identifier for a turn
      requestBody:
        required: true
        description: An object containing a speaker id
        content:
          application/json:
            schema:
              type: object 
              properties:
                speakerid: 
                  type: string
                  format: uuid
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customSuccess'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'
  /api/conversation/{conversationid}/turn/split:
    put: 
      tags:
        - "turns"
      summary: Splits a set of turns and associate speakerid to new turn 
      parameters: 
        - in: path
          name: conversationid
          type: string
          format: uuid
          required: true
          description: uuid string identifier for a conversation
      requestBody:
        required: true
        description: An object containing wordid array, turn position array, a speaker id and a split type
        content:
          application/json:
            schema:
              type: object 
              properties:
                wordids:
                  type: array
                  items:
                    type: string
                    format: uuid
                turnpositions:
                  type: array
                  items:
                    type: number
                speakerid:
                  type: string
                  format: uuid 
                splitype: 
                  description: 0 for split out, 1 for split before, 2 for split after word
                  type: number
                  minimum: 0
                  maximum: 2
                
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customSuccess'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'
  /api/conversation/{conversationid}/turn/{speakerid}:
    post:
      tags:
        - "turns"
      summary: Creates a turn in a conversation
      parameters: 
        - in: path
          name: conversationid
          type: string
          format: uuid
          required: true
          description: uuid string identifier for a conversation
        - in: path
          name: speakerid
          type: string
          format: uuid
          required: true 
          description: uuid string identifier for a speaker
      # requestBody:
      #   required: true
      #   description: a uuid string speaker id 
      #   content:
      #     application/json:
      #       schema:
      #         type: string
      #         format: uuid 
      #         example:
      #           '3fa85f6457174562b3fc2c963f66afa6'
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customSuccess'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'
    # put:
    #   tags:
    #     - "turns"
    #   summary: Replace a speaker by an existing speaker (associate turns)
    #   operationId: "CombineSpeakerIds"
    #   parameters: 
    #     - in: path
    #       name: conversationid
    #       type: string
    #       format: uuid
    #       required: true
    #     - in: path
    #       name: speakerid
    #       type: string
    #       format: uuid
    #       required: true
    #     - in: requestBody
    #       name: newspeakerid
    #       type: string
    #       format: uuid
    #       required: true
    #   responses:
    #     '200':
    #       description: request success
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/customSuccess'
    #     '400':
    #       description: bad request error
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/customError'
  /api/conversation/{conversationid}/text:
    put: 
      tags:
        - "textedit"
      summary: Replace all the text object in a conversation
      parameters: 
        - in: path
          name: conversationid
          type: string
          format: uuid
          required: true
          description: uuid string identifier for a conversation
      requestBody:
        required: true
        description: takes an object with turn id, and a list of word objects 
        content:
          application/json:
            schema:
              type: object 
              properties:
                turnid:
                  type: string
                  format: uuid
                words:
                  type: array
                  items:
                    type: object
                    properties:
                      wid:
                        type: string
                        format: uuid
                      etime:
                        type: number
                      stime: 
                        type: number 
                      pos:
                        type: number
                      word:
                        type: string
                      highlights:
                        type: array
                        items:
                          type: string
                      keywords:
                        type: array
                        items:
                          type: string
      responses:
        '200':
          description: request success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customSuccess'
        '400':
          description: bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customError'
tags:
  - name: speakers
    description: operations primarily manipulating speaker data
  - name: turns 
    description: operations primarily manipulating turn data

components: 
  schemas:
    customError:
      type: object
      properties:
        txtStatus: 
          type: string
        msg:
          type: string
    customSuccess:
      type: object
      properties:
        txtStatus: 
          type: string
        msg:
          type: string
    conversation:
      type: object 
      properties: 
        _id: 
          type: string
          format: uuid
        created:
          type: string
          format: date-time
        owner:
          type: array
          items:
            type: object
            properties:
              user_id:
                type: string
                format: uuid
              name:
                type: string
              img:
                type: string
                format: uri
        description:
          type: string
        audio:
          type: string
          format: uri
        name: 
          type: string
        mtype:
          type: string
        locked:
          type: integer
        mdate:
          type: string
          format: date-time
        mtime:
          format: string
        duration:
          format: string
        agenda:
          type: string
        abstract:
          type: string
        sharedWith:
          type: array
          items:
            type: object 
            properties:
              user_id:
                type: string
                format: uuid
              name:
                type: string
              img:
                type: string
                format: uri
        highlights:
          type: array
          items:
            type: object 
            properties:
              _id:
                type: string
                format: uuid
              label: 
                type: string
              color:
                type: string
                format: uri
        keywords:
          type: array
          items:
            type: object 
            properties:
              _id:
                type: string
                format: uuid
              label: 
                type: string
        speakers:
          type: array
          items:
            type: object 
            properties:
              speaker_id:
                type: string
                format: uuid
              speaker_name:
                type: string
              stime:
                type: number
              etime:
                type: number
        text:
          type: array
          items:
            type: object 
            properties:
              speaker_id:
                type: string
                format: uuid
              turn_id:
                type: string
                format: uuid
              pos: 
                type: integer
              words:
                type: array
                items:
                  type: object
                  properties:
                    wid:
                      type: string
                      format: uuid
                    etime:
                      type: number
                    stime:
                      type: number
                    word:
                      type: string
                    pos:
                      type: integer
                    highlights:
                      type: array
                      items:
                        type: string
                        format: uuid
                    keywords:
                      type: array
                      items:
                        type: string
                        format: uuid
    conversations:
      type: array
      items:
        $ref: '#/components/schemas/conversation'
    speakers:
      type: array
      items:
        type: object 
        properties:
          speaker_id:
            type: string
            format: uuid
          speaker_name:
            type: string
          stime:
            type: number
          etime:
            type: number
