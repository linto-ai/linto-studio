{
  "/api/users/": {
    "post": {
      "tags": ["users"],
      "summary": "Create an user",
      "requestBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "firstname": {
                  "type": "string"
                },
                "lastname": {
                  "type": "string"
                },
                "organizationName": {
                  "type": "string"
                }
              },
              "required": ["email", "password", "firstname", "lastname"]
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Ok",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "User account created"
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid email format or domain.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "409": {
          "$ref": "#/components/responses/Conflict"
        }
      }
    },
    "get": {
      "tags": ["users"],
      "summary": "List all users",
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        }
      }
    }
  },
  "/api/users/self/": {
    "get": {
      "tags": ["users self"],
      "summary": "Get connected user information",
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/UserFull"
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        },
        "404": {
          "$ref": "#/components/responses/NotFound"
        }
      }
    },
    "put": {
      "tags": ["users self"],
      "summary": "Update the current connected user",
      "requestBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "firstname": {
                  "type": "string"
                },
                "lastname": {
                  "type": "string"
                },
                "accountNotifications": {
                  "type": "object",
                  "properties": {
                    "updatePassword": {
                      "type": "boolean"
                    },
                    "inviteAccount": {
                      "type": "boolean"
                    }
                  }
                },
                "emailNotifications": {
                  "type": "object",
                  "schema": {
                    "$ref": "#/components/schemas/EmailNotifications"
                  },
                  "example": {
                    "conversations": {
                      "share": {
                        "add": true,
                        "update": true,
                        "delete": true
                      }
                    },
                    "organizations": {
                      "add": true,
                      "delete": true,
                      "update": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "User updated"
                  }
                }
              }
            }
          }
        },
        "304": {
          "$ref": "#/components/responses/NotModified"
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        },
        "415": {
          "$ref": "#/components/responses/UnsupportedMediaType"
        }
      }
    },
    "delete": {
      "tags": ["users self"],
      "summary": "Delete the current connected user",
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "User deleted"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        },
        "404": {
          "$ref": "#/components/responses/NotFound"
        }
      }
    }
  },
  "/api/users/self/picture": {
    "put": {
      "tags": ["users self"],
      "summary": "Update connected user picture",
      "requestBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "file": {
                  "type": "file"
                }
              },
              "required": ["file"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "User picture has been updated"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        }
      }
    }
  },
  "/api/users/self/verify-email": {
    "patch": {
      "tags": ["users self"],
      "summary": "Send a validation link to the user to verify email address ownership and set a magicId for 30 minutes.",
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        },
        "404": {
          "$ref": "#/components/responses/NotFound"
        }
      }
    }
  },
  "/api/users/search/": {
    "get": {
      "tags": ["users"],
      "summary": "Search users information based on their firstname, lastname or email",
      "parameters": [
        {
          "name": "search",
          "in": "path",
          "description": "Search string",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "204": {
          "$ref": "#/components/responses/NoContent"
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        },
        "404": {
          "$ref": "#/components/responses/NotFound"
        },
        "415": {
          "$ref": "#/components/responses/UnsupportedMediaType"
        }
      }
    }
  },
  "/api/users/{userId}/": {
    "get": {
      "tags": ["users"],
      "summary": "Get user information based on their uuid",
      "parameters": [
        {
          "in": "path",
          "name": "userId",
          "type": "string",
          "format": "uuid",
          "required": true,
          "description": "uuid string identifier for an user"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        },
        "404": {
          "$ref": "#/components/responses/NotFound"
        }
      }
    }
  },
  "/api/users/self/reset-password": {
    "post": {
      "tags": ["users"],
      "summary": "Send an authentication link to the user and set a magicId for 30 minutes.",
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        },
        "404": {
          "$ref": "#/components/responses/NotFound"
        }
      }
    }
  }
}
