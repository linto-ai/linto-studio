{
  "/api/conversations/{conversationId}/": {
    "get": {
      "tags": ["conversations member"],
      "summary": "Retrieve a conversation based on an ID",
      "parameters": [
        {
          "in": "path",
          "name": "conversationId",
          "type": "string",
          "format": "uuid",
          "required": true,
          "description": "uuid string identifier for an conversation"
        },
        {
          "in": "query",
          "name": "key",
          "type": "string",
          "required": false,
          "example": "tags,metadata",
          "description": "Allow to filter key"
        },
        {
          "in": "query",
          "name": "projection",
          "type": "integer",
          "required": false,
          "example": 1,
          "description": "Allow to search or not the key filter `0` or `1` (default 1)"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/Conversation"
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        },
        "404": {
          "$ref": "#/components/responses/NotFound"
        }
      }
    },
    "patch": {
      "tags": ["conversations member"],
      "summary": "Update a conversation based on an ID",
      "parameters": [
        {
          "in": "path",
          "name": "conversationId",
          "type": "string",
          "format": "uuid",
          "required": true,
          "description": "uuid string identifier for an conversation"
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "other": {
                  "type": "string",
                  "description": "Any other conversation field desired"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "message": "Information about the succes of the request"
                }
              },
              "example": {
                "message": "Conversation updated"
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        },
        "500": {
          "$ref": "#/components/responses/InternalServer"
        }
      }
    },
    "delete": {
      "tags": ["conversations member"],
      "summary": "Delete a conversation based on an ID",
      "parameters": [
        {
          "in": "path",
          "name": "conversationId",
          "type": "string",
          "format": "uuid",
          "required": true,
          "description": "uuid string identifier for an conversationId"
        }
      ],
      "responses": {
        "200": {
          "description": "OK"
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        }
      }
    }
  },
  "/api/conversations/{conversationId}/user/{userId}": {
    "patch": {
      "tags": ["conversations member"],
      "summary": "Grant access to a conversation from a member of an organization",
      "parameters": [
        {
          "in": "path",
          "name": "conversationId",
          "type": "string",
          "format": "uuid",
          "required": true,
          "description": "uuid string identifier for an conversation"
        },
        {
          "in": "path",
          "name": "userId",
          "type": "string",
          "format": "uuid",
          "required": true,
          "description": "uuid string identifier for an user"
        }
      ],
      "requestBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "right": {
                  "type": "integer",
                  "description": "Right to give to the user"
                }
              }
            },
            "required": ["right"]
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "message": "Information about the succes of the request"
                }
              },
              "example": {
                "message": "Conversation updated"
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        },
        "404": {
          "$ref": "#/components/responses/NotFound"
        },
        "500": {
          "$ref": "#/components/responses/InternalServer"
        }
      }
    }
  },
  "/api/conversations/{conversationId}/users": {
    "get": {
      "tags": ["conversations member"],
      "summary": "List all users who have an access to the conversation",
      "parameters": [
        {
          "in": "path",
          "name": "conversationId",
          "type": "string",
          "format": "uuid",
          "required": true,
          "description": "uuid string identifier for an conversation"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "type": "object",
              "properties": {
                "conversationUsers": {
                  "type": "object",
                  "properties": {
                    "external_members": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "organization_members": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              },
              "example": {
                "conversationUsers": {
                  "external_members": [
                    {
                      "_id": "6392f74a32d603288c910185",
                      "email": "me@linagora.com",
                      "firstname": "me",
                      "lastname": "last",
                      "img": "pictures/default.jpg",
                      "role": 0,
                      "right": "3"
                    }
                  ],
                  "organization_members": [
                    {
                      "_id": "634eae867d29b677f13e7e6c",
                      "email": "first@linagora.com",
                      "firstname": "name",
                      "lastname": "second",
                      "img": "pictures/default.jpg",
                      "role": 3,
                      "right": 31
                    }
                  ]
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        },
        "404": {
          "$ref": "#/components/responses/NotFound"
        }
      }
    }
  },
  "/api/conversations/{conversationId}/rights": {
    "get": {
      "tags": ["conversations member"],
      "summary": "Retrieve information about the access rights to the conversation",
      "parameters": [
        {
          "in": "path",
          "name": "conversationId",
          "type": "string",
          "format": "uuid",
          "required": true,
          "description": "uuid string identifier for an conversation"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "integer",
                    "description": "Role access of the organization"
                  },
                  "right": {
                    "type": "integer",
                    "description": "Right of the user"
                  }
                }
              },
              "example": {
                "role": 3,
                "right": 31
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        },
        "404": {
          "$ref": "#/components/responses/NotFound"
        }
      }
    }
  },
  "/api/conversations/{conversationId}/download": {
    "post": {
      "tags": ["conversations member"],
      "summary": "Download a conversation's subtitle in a desired format.",
      "parameters": [
        {
          "in": "path",
          "name": "conversationId",
          "type": "string",
          "format": "uuid",
          "required": true,
          "description": "uuid string identifier for an conversation"
        },
        {
          "in": "query",
          "name": "format",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/DownloadConversationType"
          },
          "description": "Download type of media type:\n * `json` - Segment information with timestamp and speaker \n * `text` - Raw transcription \n * `docx` / `verbatim` - Generate a .docx file to download \n * `cri` / `cra` / `cred` / `resume` -  LLM request WIP (openai or mixtral) \n"
        },
        {
          "in": "path",
          "name": "preview",
          "type": "boolean",
          "required": false,
          "example": "false",
          "description": "Allow to generate a pdf preview on docx generated output"
        },
        {
          "in": "query",
          "name": "regenerate",
          "type": "boolean",
          "required": false,
          "example": "false",
          "description": "Allow to regenerate an llm request"
        },
        {
          "in": "query",
          "name": "prompt",
          "type": "string",
          "required": false,
          "example": "Make a resume of my conversation",
          "description": "Prompt to generate for llm request"
        }
      ],
      "requestBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "$ref": "#/components/schemas/ExportRequest"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK"
        },
        "204": {
          "$ref": "#/components/responses/NoContent"
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        },
        "404": {
          "$ref": "#/components/responses/NotFound"
        }
      }
    }
  },
  "/api/conversations/{conversationId}/export/list": {
    "get": {
      "tags": ["conversations member"],
      "summary": "Retrieve and list all the export requests that have been generated by an llm api",
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "$ref": "#/components/schemas/ExportList"
                }
              }
            }
          }
        },
        "404": {
          "$ref": "#/components/responses/NotFound"
        }
      }
    }
  }
}
