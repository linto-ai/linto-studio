{
  "/api/organizations/{organizationId}/tokens/": {
    "post": {
      "tags": ["organizations admin m2m"],
      "summary": "Create a new machine-to-machine token for the organization",
      "parameters": [
        {
          "in": "path",
          "name": "organizationId",
          "type": "string",
          "format": "uuid",
          "required": true,
          "description": "uuid string identifier for the organization"
        }
      ],
      "requestBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "role": {
                  "type": "integer"
                },
                "expires_in": {
                  "type": "string",
                  "description": "Duration until the token expires (e.g., 30d, 12h)",
                  "default": "30d"
                }
              },
              "required": ["role"]
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/M2MToken"
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        },
        "404": {
          "$ref": "#/components/responses/NotFound"
        }
      }
    },
    "get": {
      "tags": ["organizations admin m2m"],
      "summary": "Retrieve all machine-to-machine tokens for the organization",
      "parameters": [
        {
          "in": "path",
          "name": "organizationId",
          "type": "string",
          "format": "uuid",
          "required": true,
          "description": "uuid string identifier for the organization"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "$ref": "#/components/schemas/M2MUser"
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        },
        "404": {
          "$ref": "#/components/responses/NotFound"
        }
      }
    }
  },
  "/api/organizations/{organizationId}/tokens/{tokenId}": {
    "put": {
      "tags": ["organizations admin m2m"],
      "summary": "Regenerate a machine-to-machine token with a new value",
      "parameters": [
        {
          "in": "path",
          "name": "organizationId",
          "type": "string",
          "format": "uuid",
          "required": true,
          "description": "uuid string identifier for the organization"
        },
        {
          "in": "path",
          "name": "tokenId",
          "type": "string",
          "format": "uuid",
          "required": true,
          "description": "uuid string identifier for the m2m token"
        }
      ],
      "requestBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "expires_in": {
                  "type": "string",
                  "description": "Duration until the token expires (e.g., 30d, 12h)",
                  "default": "30d"
                }
              },
              "required": ["role"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/M2MToken"
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        },
        "404": {
          "$ref": "#/components/responses/NotFound"
        }
      }
    },
    "get": {
      "tags": ["organizations admin m2m"],
      "summary": "Retrieve details of a specific machine-to-machine token",
      "parameters": [
        {
          "in": "path",
          "name": "organizationId",
          "type": "string",
          "format": "uuid",
          "required": true,
          "description": "uuid string identifier for the organization"
        },
        {
          "in": "path",
          "name": "tokenId",
          "type": "string",
          "format": "uuid",
          "required": true,
          "description": "uuid string identifier for the m2m token"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/M2MToken"
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        },
        "404": {
          "$ref": "#/components/responses/NotFound"
        }
      }
    },
    "delete": {
      "tags": ["organizations admin m2m"],
      "summary": "Delete a machine-to-machine token",
      "parameters": [
        {
          "in": "path",
          "name": "organizationId",
          "type": "string",
          "format": "uuid",
          "required": true,
          "description": "uuid string identifier for the organization"
        },
        {
          "in": "path",
          "name": "tokenId",
          "type": "string",
          "format": "uuid",
          "required": true,
          "description": "uuid string identifier for the m2m token"
        },
        {
          "in": "query",
          "name": "revoke",
          "required": false,
          "description": "Allow to disable or revoke the token. If revoke=true, it does not delete, but disables. Default to false"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Message"
                }
              },
              "example": {
                "message": "M2M token has been deleted"
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        },
        "404": {
          "$ref": "#/components/responses/NotFound"
        }
      }
    }
  }
}
