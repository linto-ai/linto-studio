version: '3.7'

services:
  conversation-manager-mongo:
    image: mongo:latest
    env_file: .dockerenv
    volumes:
      - ./${VOLUME_DATABASE_FOLDER}/:/data/db
      - ./config/seeds/mongodb/init.js:/docker-entrypoint-initdb.d/init.js
    networks:
      - internal

  conversation-manager-redis:
    image: redis:latest
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - '6379:6379'
    volumes:
      - './${VOLUME_REDIS_FOLDER}:/bitnami/redis/data'
    networks:
      - internal

  conversation-manager-api:
    image: lintoai/linto-platform-conversation-manager:$LINTO_STACK_IMAGE_TAG
    container_name: conversation-manager
    env_file: .dockerenv
    environment: 
      - WEBSERVER_HTTP_PORT=80 #Match the expose Dockerfile, but docker-compose will use the WEBSERVER_HTTP_PORT .env settings
      - DEBUG=${DEBUG}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./${VOLUME_AUDIO_UPLOAD_PATH}:/usr/src/app/conversation-manager/${VOLUME_AUDIO_UPLOAD_PATH}
    command:
      # - --rebuild-vue-app
      - ${EXTRA_COMMAND_DOCKER}
      - --run-cmd=node app.js
    ports:
      - "${WEBSERVER_HTTP_PORT}:80"
    networks:
      - internal

networks:
  internal: